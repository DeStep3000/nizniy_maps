services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: postgres_db
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-locations_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      TZ: Europe/Moscow
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-locations_db}" ]
      interval: 10s
      timeout: 5s
      retries: 10
  app:
    build: .
    container_name: nizhny_maps
    depends_on:
      postgres:
        condition: service_healthy
      command: >
        bash -lc "
          uv sync --frozen &&
          echo '‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–æ–∫–∞ PostgreSQL –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è...' && sleep 10 &&
          echo 'üìä –ü–µ—Ä–≤–∏—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...' &&
          uv run python -m src.simple_importer data_/cultural_objects_mnn.xlsx || echo '‚ÑπÔ∏è –ò–º–ø–æ—Ä—Ç –ø—Ä–æ–ø—É—â–µ–Ω'
        "
    env_file: .env
    ports:
      - "8501:8501"
    environment:
      - TZ=Europe/Moscow
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-locations_db}
      - YANDEXGPT_API_KEY=${YANDEXGPT_API_KEY}
      - YANDEXGPT_FOLDER_ID=${YANDEXGPT_FOLDER_ID}
    volumes:
      - ./data_:/app/data_

  caddy:
    image: caddy:2
    container_name: web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - app

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
