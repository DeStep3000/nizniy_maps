import streamlit as st

def generate_yandex_maps_url(route, start_position):
    if not route:
        return None

    points = [start_position]
    for point in route:
        obj = point["object"]
        points.append((obj["lat"], obj["lon"]))

    points_str = [f"{lat},{lon}" for (lat, lon) in points]
    route_points = "~".join(points_str)
    yandex_url = f"https://yandex.ru/maps/?rtext={route_points}&rtt=pd"
    return yandex_url


def apply_chat_style():
    st.markdown("""
                <style>
                    /* –°—Ç–∏–ª—å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ */
                    .assistant-message {
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        color: white;
                        padding: 20px;
                        border-radius: 20px;
                        margin: 10px 0;
                        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
                        border: 1px solid #e0e0e0;
                        position: relative;
                        max-width: 80%;
                        margin-left: 0;
                    }

                    /* –ò–∫–æ–Ω–∫–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ */
                    .assistant-icon {
                        position: absolute;
                        top: 15px;
                        left: 15px;
                        font-size: 20px;
                    }

                    /* –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ */
                    .assistant-text {
                        margin-left: 35px;
                        line-height: 1.6;
                    }

                    /* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ */
                    .message-title {
                        font-weight: bold;
                        font-size: 1.1em;
                        margin-bottom: 8px;
                        color: #fff;
                    }

                    /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–∞—Ç–∞ */
                    .chat-container {
                        max-height: 600px;
                        overflow-y: auto;
                        padding: 20px;
                        background: #f8f9fa;
                        border-radius: 15px;
                        border: 1px solid #e0e0e0;
                    }
                </style>
                """, unsafe_allow_html=True)


def chat_response(response, use_llm):
    if use_llm:
        st.markdown(f"""
                    <div class="assistant-message">
                        <div class="assistant-icon">ü§ñ</div>
                        <div class="assistant-text">
                            <div class="message-title">–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫:</div>
                            {response}
                            <br><br>
                            <strong>‚ö†Ô∏è *–û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é –∏ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.*</strong>
                        </div>
                    </div>
                """, unsafe_allow_html=True)
    else:
        st.markdown(f"""
                    <div class="assistant-message">
                        <div class="assistant-icon">‚ùì</div>
                        <div class="assistant-text">
                            <div class="message-title">–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞:</div>
                            {response}
                            <br><br>
                            <strong>üí° –î–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI</strong>
                        </div>
                    </div>
                """, unsafe_allow_html=True)
